{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isAfter\r\n * @category Common Helpers\r\n * @summary Is the first date after the second one?\r\n *\r\n * @description\r\n * Is the first date after the second one?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date that should be after the other one to return true\r\n * @param {Date|Number} dateToCompare - the date to compare with\r\n * @returns {Boolean} the first date is after the second date\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Is 10 July 1989 after 11 February 1987?\r\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> true\r\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/date-fns/esm/isAfter/index.js"],"names":["toDate","requiredArgs","isAfter","dirtyDate","dirtyDateToCompare","arguments","date","dateToCompare","getTime"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,kBAA5B,EAAgD;AAC7DH,EAAAA,YAAY,CAAC,CAAD,EAAII,SAAJ,CAAZ;AACA,MAAIC,IAAI,GAAGN,MAAM,CAACG,SAAD,CAAjB;AACA,MAAII,aAAa,GAAGP,MAAM,CAACI,kBAAD,CAA1B;AACA,SAAOE,IAAI,CAACE,OAAL,KAAiBD,aAAa,CAACC,OAAd,EAAxB;AACD","sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isAfter\r\n * @category Common Helpers\r\n * @summary Is the first date after the second one?\r\n *\r\n * @description\r\n * Is the first date after the second one?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date that should be after the other one to return true\r\n * @param {Date|Number} dateToCompare - the date to compare with\r\n * @returns {Boolean} the first date is after the second date\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Is 10 July 1989 after 11 February 1987?\r\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> true\r\n */\r\n\r\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\r\n  requiredArgs(2, arguments);\r\n  var date = toDate(dirtyDate);\r\n  var dateToCompare = toDate(dirtyDateToCompare);\r\n  return date.getTime() > dateToCompare.getTime();\r\n}"]},"metadata":{},"sourceType":"module"}