{"ast":null,"code":"import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nexport default Stack;","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/lodash-es/_Stack.js"],"names":["ListCache","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","entries","data","__data__","size","prototype","clear","get","has","set"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACtB,MAAIC,IAAI,GAAG,KAAKC,QAAL,GAAgB,IAAIT,SAAJ,CAAcO,OAAd,CAA3B;AACA,OAAKG,IAAL,GAAYF,IAAI,CAACE,IAAjB;AACD,C,CAED;;;AACAJ,KAAK,CAACK,SAAN,CAAgBC,KAAhB,GAAwBX,UAAxB;AACAK,KAAK,CAACK,SAAN,CAAgB,QAAhB,IAA4BT,WAA5B;AACAI,KAAK,CAACK,SAAN,CAAgBE,GAAhB,GAAsBV,QAAtB;AACAG,KAAK,CAACK,SAAN,CAAgBG,GAAhB,GAAsBV,QAAtB;AACAE,KAAK,CAACK,SAAN,CAAgBI,GAAhB,GAAsBV,QAAtB;AAEA,eAAeC,KAAf","sourcesContent":["import ListCache from './_ListCache.js';\r\nimport stackClear from './_stackClear.js';\r\nimport stackDelete from './_stackDelete.js';\r\nimport stackGet from './_stackGet.js';\r\nimport stackHas from './_stackHas.js';\r\nimport stackSet from './_stackSet.js';\r\n\r\n/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Stack(entries) {\r\n  var data = this.__data__ = new ListCache(entries);\r\n  this.size = data.size;\r\n}\r\n\r\n// Add methods to `Stack`.\r\nStack.prototype.clear = stackClear;\r\nStack.prototype['delete'] = stackDelete;\r\nStack.prototype.get = stackGet;\r\nStack.prototype.has = stackHas;\r\nStack.prototype.set = stackSet;\r\n\r\nexport default Stack;\r\n"]},"metadata":{},"sourceType":"module"}