{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name getISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the ISO week-numbering year of the given date.\r\n *\r\n * @description\r\n * Get the ISO week-numbering year of the given date,\r\n * which always starts 3 days before the year's first Thursday.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\r\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\r\n *   This change makes the name consistent with\r\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the ISO week-numbering year\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which ISO-week numbering year is 2 January 2005?\r\n * const result = getISOWeekYear(new Date(2005, 0, 2))\r\n * //=> 2004\r\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/date-fns/esm/getISOWeekYear/index.js"],"names":["toDate","startOfISOWeek","requiredArgs","getISOWeekYear","dirtyDate","arguments","date","year","getFullYear","fourthOfJanuaryOfNextYear","Date","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AAChDF,EAAAA,YAAY,CAAC,CAAD,EAAIG,SAAJ,CAAZ;AACA,MAAIC,IAAI,GAAGN,MAAM,CAACI,SAAD,CAAjB;AACA,MAAIG,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;AACA,MAAIC,yBAAyB,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAhC;AACAD,EAAAA,yBAAyB,CAACE,WAA1B,CAAsCJ,IAAI,GAAG,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD;AACAE,EAAAA,yBAAyB,CAACG,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;AACA,MAAIC,eAAe,GAAGZ,cAAc,CAACQ,yBAAD,CAApC;AACA,MAAIK,yBAAyB,GAAG,IAAIJ,IAAJ,CAAS,CAAT,CAAhC;AACAI,EAAAA,yBAAyB,CAACH,WAA1B,CAAsCJ,IAAtC,EAA4C,CAA5C,EAA+C,CAA/C;AACAO,EAAAA,yBAAyB,CAACF,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;AACA,MAAIG,eAAe,GAAGd,cAAc,CAACa,yBAAD,CAApC;;AAEA,MAAIR,IAAI,CAACU,OAAL,MAAkBH,eAAe,CAACG,OAAhB,EAAtB,EAAiD;AAC/C,WAAOT,IAAI,GAAG,CAAd;AACD,GAFD,MAEO,IAAID,IAAI,CAACU,OAAL,MAAkBD,eAAe,CAACC,OAAhB,EAAtB,EAAiD;AACtD,WAAOT,IAAP;AACD,GAFM,MAEA;AACL,WAAOA,IAAI,GAAG,CAAd;AACD;AACF","sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name getISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the ISO week-numbering year of the given date.\r\n *\r\n * @description\r\n * Get the ISO week-numbering year of the given date,\r\n * which always starts 3 days before the year's first Thursday.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\r\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\r\n *   This change makes the name consistent with\r\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the ISO week-numbering year\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which ISO-week numbering year is 2 January 2005?\r\n * const result = getISOWeekYear(new Date(2005, 0, 2))\r\n * //=> 2004\r\n */\r\n\r\nexport default function getISOWeekYear(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  var date = toDate(dirtyDate);\r\n  var year = date.getFullYear();\r\n  var fourthOfJanuaryOfNextYear = new Date(0);\r\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\r\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\r\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\r\n  var fourthOfJanuaryOfThisYear = new Date(0);\r\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\r\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\r\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\r\n\r\n  if (date.getTime() >= startOfNextYear.getTime()) {\r\n    return year + 1;\r\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\r\n    return year;\r\n  } else {\r\n    return year - 1;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}