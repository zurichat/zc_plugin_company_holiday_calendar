{"ast":null,"code":"import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\r\n * Checks if `value` is classified as a typed array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\r\n * @example\r\n *\r\n * _.isTypedArray(new Uint8Array);\r\n * // => true\r\n *\r\n * _.isTypedArray([]);\r\n * // => false\r\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nexport default isTypedArray;","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/lodash-es/isTypedArray.js"],"names":["baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;;AACA,IAAIC,gBAAgB,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,YAA5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,YAAY,GAAGD,gBAAgB,GAAGF,SAAS,CAACE,gBAAD,CAAZ,GAAiCH,gBAApE;AAEA,eAAeI,YAAf","sourcesContent":["import baseIsTypedArray from './_baseIsTypedArray.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\r\n\r\n/**\r\n * Checks if `value` is classified as a typed array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\r\n * @example\r\n *\r\n * _.isTypedArray(new Uint8Array);\r\n * // => true\r\n *\r\n * _.isTypedArray([]);\r\n * // => false\r\n */\r\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\r\n\r\nexport default isTypedArray;\r\n"]},"metadata":{},"sourceType":"module"}