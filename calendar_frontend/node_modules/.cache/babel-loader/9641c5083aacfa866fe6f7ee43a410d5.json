{"ast":null,"code":"/**\r\n * The base implementation of `_.slice` without an iteratee call guard.\r\n *\r\n * @private\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n\n  end = end > length ? length : end;\n\n  if (end < 0) {\n    end += length;\n  }\n\n  length = start > end ? 0 : end - start >>> 0;\n  start >>>= 0;\n  var result = Array(length);\n\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n\n  return result;\n}\n\nexport default baseSlice;","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/lodash-es/_baseSlice.js"],"names":["baseSlice","array","start","end","index","length","result","Array"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGJ,KAAK,CAACI,MADnB;;AAGA,MAAIH,KAAK,GAAG,CAAZ,EAAe;AACbA,IAAAA,KAAK,GAAG,CAACA,KAAD,GAASG,MAAT,GAAkB,CAAlB,GAAuBA,MAAM,GAAGH,KAAxC;AACD;;AACDC,EAAAA,GAAG,GAAGA,GAAG,GAAGE,MAAN,GAAeA,MAAf,GAAwBF,GAA9B;;AACA,MAAIA,GAAG,GAAG,CAAV,EAAa;AACXA,IAAAA,GAAG,IAAIE,MAAP;AACD;;AACDA,EAAAA,MAAM,GAAGH,KAAK,GAAGC,GAAR,GAAc,CAAd,GAAoBA,GAAG,GAAGD,KAAP,KAAkB,CAA9C;AACAA,EAAAA,KAAK,MAAM,CAAX;AAEA,MAAII,MAAM,GAAGC,KAAK,CAACF,MAAD,CAAlB;;AACA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvBC,IAAAA,MAAM,CAACF,KAAD,CAAN,GAAgBH,KAAK,CAACG,KAAK,GAAGF,KAAT,CAArB;AACD;;AACD,SAAOI,MAAP;AACD;;AAED,eAAeN,SAAf","sourcesContent":["/**\r\n * The base implementation of `_.slice` without an iteratee call guard.\r\n *\r\n * @private\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\r\nfunction baseSlice(array, start, end) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  if (start < 0) {\r\n    start = -start > length ? 0 : (length + start);\r\n  }\r\n  end = end > length ? length : end;\r\n  if (end < 0) {\r\n    end += length;\r\n  }\r\n  length = start > end ? 0 : ((end - start) >>> 0);\r\n  start >>>= 0;\r\n\r\n  var result = Array(length);\r\n  while (++index < length) {\r\n    result[index] = array[index + start];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseSlice;\r\n"]},"metadata":{},"sourceType":"module"}