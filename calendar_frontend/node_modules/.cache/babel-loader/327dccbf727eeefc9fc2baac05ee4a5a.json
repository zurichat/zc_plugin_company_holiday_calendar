{"ast":null,"code":"import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\r\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Array} matchData The property names, values, and compare flags to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexport default baseIsMatch;","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/lodash-es/_baseIsMatch.js"],"names":["Stack","baseIsEqual","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseIsMatch","object","source","matchData","customizer","index","length","noCustomizer","Object","data","key","objValue","srcValue","undefined","stack","result"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA;;AACA,IAAIC,oBAAoB,GAAG,CAA3B;AAAA,IACIC,sBAAsB,GAAG,CAD7B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4D;AAC1D,MAAIC,KAAK,GAAGF,SAAS,CAACG,MAAtB;AAAA,MACIA,MAAM,GAAGD,KADb;AAAA,MAEIE,YAAY,GAAG,CAACH,UAFpB;;AAIA,MAAIH,MAAM,IAAI,IAAd,EAAoB;AAClB,WAAO,CAACK,MAAR;AACD;;AACDL,EAAAA,MAAM,GAAGO,MAAM,CAACP,MAAD,CAAf;;AACA,SAAOI,KAAK,EAAZ,EAAgB;AACd,QAAII,IAAI,GAAGN,SAAS,CAACE,KAAD,CAApB;;AACA,QAAKE,YAAY,IAAIE,IAAI,CAAC,CAAD,CAArB,GACIA,IAAI,CAAC,CAAD,CAAJ,KAAYR,MAAM,CAACQ,IAAI,CAAC,CAAD,CAAL,CADtB,GAEI,EAAEA,IAAI,CAAC,CAAD,CAAJ,IAAWR,MAAb,CAFR,EAGM;AACJ,aAAO,KAAP;AACD;AACF;;AACD,SAAO,EAAEI,KAAF,GAAUC,MAAjB,EAAyB;AACvBG,IAAAA,IAAI,GAAGN,SAAS,CAACE,KAAD,CAAhB;AACA,QAAIK,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAd;AAAA,QACIE,QAAQ,GAAGV,MAAM,CAACS,GAAD,CADrB;AAAA,QAEIE,QAAQ,GAAGH,IAAI,CAAC,CAAD,CAFnB;;AAIA,QAAIF,YAAY,IAAIE,IAAI,CAAC,CAAD,CAAxB,EAA6B;AAC3B,UAAIE,QAAQ,KAAKE,SAAb,IAA0B,EAAEH,GAAG,IAAIT,MAAT,CAA9B,EAAgD;AAC9C,eAAO,KAAP;AACD;AACF,KAJD,MAIO;AACL,UAAIa,KAAK,GAAG,IAAIlB,KAAJ,EAAZ;;AACA,UAAIQ,UAAJ,EAAgB;AACd,YAAIW,MAAM,GAAGX,UAAU,CAACO,QAAD,EAAWC,QAAX,EAAqBF,GAArB,EAA0BT,MAA1B,EAAkCC,MAAlC,EAA0CY,KAA1C,CAAvB;AACD;;AACD,UAAI,EAAEC,MAAM,KAAKF,SAAX,GACEhB,WAAW,CAACe,QAAD,EAAWD,QAAX,EAAqBb,oBAAoB,GAAGC,sBAA5C,EAAoEK,UAApE,EAAgFU,KAAhF,CADb,GAEEC,MAFJ,CAAJ,EAGO;AACL,eAAO,KAAP;AACD;AACF;AACF;;AACD,SAAO,IAAP;AACD;;AAED,eAAef,WAAf","sourcesContent":["import Stack from './_Stack.js';\r\nimport baseIsEqual from './_baseIsEqual.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Array} matchData The property names, values, and compare flags to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n */\r\nfunction baseIsMatch(object, source, matchData, customizer) {\r\n  var index = matchData.length,\r\n      length = index,\r\n      noCustomizer = !customizer;\r\n\r\n  if (object == null) {\r\n    return !length;\r\n  }\r\n  object = Object(object);\r\n  while (index--) {\r\n    var data = matchData[index];\r\n    if ((noCustomizer && data[2])\r\n          ? data[1] !== object[data[0]]\r\n          : !(data[0] in object)\r\n        ) {\r\n      return false;\r\n    }\r\n  }\r\n  while (++index < length) {\r\n    data = matchData[index];\r\n    var key = data[0],\r\n        objValue = object[key],\r\n        srcValue = data[1];\r\n\r\n    if (noCustomizer && data[2]) {\r\n      if (objValue === undefined && !(key in object)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      var stack = new Stack;\r\n      if (customizer) {\r\n        var result = customizer(objValue, srcValue, key, object, source, stack);\r\n      }\r\n      if (!(result === undefined\r\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\r\n            : result\r\n          )) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default baseIsMatch;\r\n"]},"metadata":{},"sourceType":"module"}