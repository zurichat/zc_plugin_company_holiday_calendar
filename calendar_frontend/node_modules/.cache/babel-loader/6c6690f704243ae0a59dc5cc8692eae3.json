{"ast":null,"code":"import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\r\n * @name addMinutes\r\n * @category Minute Helpers\r\n * @summary Add the specified number of minutes to the given date.\r\n *\r\n * @description\r\n * Add the specified number of minutes to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\r\n * @returns {Date} the new date with the minutes added\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Add 30 minutes to 10 July 2014 12:00:00:\r\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\r\n * //=> Thu Jul 10 2014 12:30:00\r\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/date-fns/esm/addMinutes/index.js"],"names":["toInteger","addMilliseconds","requiredArgs","MILLISECONDS_IN_MINUTE","addMinutes","dirtyDate","dirtyAmount","arguments","amount"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,IAAIC,sBAAsB,GAAG,KAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,WAA/B,EAA4C;AACzDJ,EAAAA,YAAY,CAAC,CAAD,EAAIK,SAAJ,CAAZ;AACA,MAAIC,MAAM,GAAGR,SAAS,CAACM,WAAD,CAAtB;AACA,SAAOL,eAAe,CAACI,SAAD,EAAYG,MAAM,GAAGL,sBAArB,CAAtB;AACD","sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\r\nimport addMilliseconds from \"../addMilliseconds/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\nvar MILLISECONDS_IN_MINUTE = 60000;\r\n/**\r\n * @name addMinutes\r\n * @category Minute Helpers\r\n * @summary Add the specified number of minutes to the given date.\r\n *\r\n * @description\r\n * Add the specified number of minutes to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\r\n * @returns {Date} the new date with the minutes added\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Add 30 minutes to 10 July 2014 12:00:00:\r\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\r\n * //=> Thu Jul 10 2014 12:30:00\r\n */\r\n\r\nexport default function addMinutes(dirtyDate, dirtyAmount) {\r\n  requiredArgs(2, arguments);\r\n  var amount = toInteger(dirtyAmount);\r\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\r\n}"]},"metadata":{},"sourceType":"module"}