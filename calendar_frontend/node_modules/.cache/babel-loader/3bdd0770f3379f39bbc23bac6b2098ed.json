{"ast":null,"code":"import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n/**\r\n * Creates a `_.range` or `_.rangeRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new range function.\r\n */\n\nfunction createRange(fromRight) {\n  return function (start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    } // Ensure the sign of `-0` is preserved.\n\n\n    start = toFinite(start);\n\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n\n    step = step === undefined ? start < end ? 1 : -1 : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/lodash-es/_createRange.js"],"names":["baseRange","isIterateeCall","toFinite","createRange","fromRight","start","end","step","undefined"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,SAAO,UAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AAChC,QAAIA,IAAI,IAAI,OAAOA,IAAP,IAAe,QAAvB,IAAmCN,cAAc,CAACI,KAAD,EAAQC,GAAR,EAAaC,IAAb,CAArD,EAAyE;AACvED,MAAAA,GAAG,GAAGC,IAAI,GAAGC,SAAb;AACD,KAH+B,CAIhC;;;AACAH,IAAAA,KAAK,GAAGH,QAAQ,CAACG,KAAD,CAAhB;;AACA,QAAIC,GAAG,KAAKE,SAAZ,EAAuB;AACrBF,MAAAA,GAAG,GAAGD,KAAN;AACAA,MAAAA,KAAK,GAAG,CAAR;AACD,KAHD,MAGO;AACLC,MAAAA,GAAG,GAAGJ,QAAQ,CAACI,GAAD,CAAd;AACD;;AACDC,IAAAA,IAAI,GAAGA,IAAI,KAAKC,SAAT,GAAsBH,KAAK,GAAGC,GAAR,GAAc,CAAd,GAAkB,CAAC,CAAzC,GAA8CJ,QAAQ,CAACK,IAAD,CAA7D;AACA,WAAOP,SAAS,CAACK,KAAD,EAAQC,GAAR,EAAaC,IAAb,EAAmBH,SAAnB,CAAhB;AACD,GAdD;AAeD;;AAED,eAAeD,WAAf","sourcesContent":["import baseRange from './_baseRange.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toFinite from './toFinite.js';\r\n\r\n/**\r\n * Creates a `_.range` or `_.rangeRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new range function.\r\n */\r\nfunction createRange(fromRight) {\r\n  return function(start, end, step) {\r\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\r\n      end = step = undefined;\r\n    }\r\n    // Ensure the sign of `-0` is preserved.\r\n    start = toFinite(start);\r\n    if (end === undefined) {\r\n      end = start;\r\n      start = 0;\r\n    } else {\r\n      end = toFinite(end);\r\n    }\r\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\r\n    return baseRange(start, end, step, fromRight);\r\n  };\r\n}\r\n\r\nexport default createRange;\r\n"]},"metadata":{},"sourceType":"module"}