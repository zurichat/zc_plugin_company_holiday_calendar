{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\r\n * @name getISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Get the ISO week of the given date.\r\n *\r\n * @description\r\n * Get the ISO week of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the ISO week\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which week of the ISO-week numbering year is 2 January 2005?\r\n * const result = getISOWeek(new Date(2005, 0, 2))\r\n * //=> 53\r\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","map":{"version":3,"sources":["C:/Users/HI/desktop/zc_plugin_company_holiday_calendar/calendar_frontend/node_modules/date-fns/esm/getISOWeek/index.js"],"names":["toDate","startOfISOWeek","startOfISOWeekYear","requiredArgs","MILLISECONDS_IN_WEEK","getISOWeek","dirtyDate","arguments","date","diff","getTime","Math","round"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,IAAIC,oBAAoB,GAAG,SAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC5CH,EAAAA,YAAY,CAAC,CAAD,EAAII,SAAJ,CAAZ;AACA,MAAIC,IAAI,GAAGR,MAAM,CAACM,SAAD,CAAjB;AACA,MAAIG,IAAI,GAAGR,cAAc,CAACO,IAAD,CAAd,CAAqBE,OAArB,KAAiCR,kBAAkB,CAACM,IAAD,CAAlB,CAAyBE,OAAzB,EAA5C,CAH4C,CAGoC;AAChF;AACA;;AAEA,SAAOC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGL,oBAAlB,IAA0C,CAAjD;AACD","sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\r\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\nvar MILLISECONDS_IN_WEEK = 604800000;\r\n/**\r\n * @name getISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Get the ISO week of the given date.\r\n *\r\n * @description\r\n * Get the ISO week of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the ISO week\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Which week of the ISO-week numbering year is 2 January 2005?\r\n * const result = getISOWeek(new Date(2005, 0, 2))\r\n * //=> 53\r\n */\r\n\r\nexport default function getISOWeek(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  var date = toDate(dirtyDate);\r\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\r\n  // because the number of milliseconds in a week is not constant\r\n  // (e.g. it's different in the week of the daylight saving time clock shift)\r\n\r\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\r\n}"]},"metadata":{},"sourceType":"module"}